
extended:
  tags:
    RuleItem:
      ITEM_PORTABLE_SHIELD: int


  scripts:
    hitUnit:
    - offset: 1 # Extend Front Armor facing (40k script) + Reduce incoming damage
      code: |   # use Shield Ammo as HP, if HP lower than attack power, shield doesn't protect
        var int unitDirection;
        var int attackerDirection;
        var int leftShieldHP;
        var int rightShieldHP; # in case someone wants to dual wield shields
        var int temp;
        var ptre BattleItem handBattleItem;
        var ptr RuleItem handRuleItem;

        unit.getRightHandWeapon handBattleItem; # in inventory screen left side
        handBattleItem.getRuleItem handRuleItem; # righthandweapon gets preference

        handRuleItem.isTwoHanded temp; # two handed weapons hide the shield
        if eq temp 1;
          return power part side;
        end;

        handRuleItem.getTag temp Tag.ITEM_PORTABLE_SHIELD;
        if eq temp 1;
          handBattleItem.getAmmoQuantity rightShieldHP;
        end;


        unit.getLeftHandWeapon handBattleItem;
        handBattleItem.getRuleItem handRuleItem;

        handRuleItem.getTag temp Tag.ITEM_PORTABLE_SHIELD;
        if eq temp 1;
          handBattleItem.getAmmoQuantity leftShieldHP;
          debug_log "leftShieldHP" leftShieldHP;
        end;

        handRuleItem.isTwoHanded temp; # two handed weapons hide the shield
        if eq temp 1;
          return power part side;
        end;


        if and eq rightShieldHP 0 eq leftShieldHP 0; # no valid shield
          return power part side;
        end;

        if or eq attacker null eq side SIDE_UNDER; # no valid attacker or from below
          return power part side;
        end;

        unit.getDirection unitDirection; # {0-7}
        attacker.getDirection attackerDirection;
        add attackerDirection 4; # Offset for attacker so A+D "face the same direction"
        mod attackerDirection 8; # (7+4) % 8 = 3 # in other words limit to {0-7}
        sub unitDirection attackerDirection; # check if both face the same direction
        abs unitDirection; # range should be {-1, 0, +1} to take effect

        if lt unitDirection 2; # {abs(-1), 0, +1} # hitting shield facing
          set side SIDE_FRONT;

          # can't be less equal as ammoQuantity can't be set to 0
          if or lt power rightShieldHP lt power leftShieldHP; # one shield can block incoming power
            if lt power rightShieldHP; # it's the right one
              sub rightShieldHP power;
              unit.getRightHandWeapon handBattleItem;
              handBattleItem.setAmmoQuantity rightShieldHP;
              battle_game.flashMessage "Remaining Shield Points: {0}" rightShieldHP;
            else;
              sub rightShieldHP power;
              unit.getLeftHandWeapon handBattleItem;
              handBattleItem.setAmmoQuantity leftShieldHP;
              battle_game.flashMessage "Remaining Shield Points: {0}" leftShieldHP;
            end;
              set power 0;
          else;
            battle_game.flashMessage "Shield failed to block attack";
          end;

          # new part
          

        end;

        return power part side;



items: 
  - type: AUX_SHIELDPD
    tags:
      ITEM_PORTABLE_SHIELD: 1
